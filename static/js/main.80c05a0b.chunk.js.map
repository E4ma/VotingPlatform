{"version":3,"sources":["components/VotingCard.js","App.js","reportWebVitals.js","index.js"],"names":["VotingCard","props","team","incrementVoteCount","Card","style","width","Img","variant","src","logo","Body","Title","name","Button","onClick","_id","Footer","votes","App","useState","teams","setTeams","useEffect","teamsJson","Container","className","Row","map","Col","md","teamId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAmBeA,MAhBf,SAAoBC,GAAQ,IACpBC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,mBAEZ,OACE,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAG,yBAAoBP,EAAKQ,QACpD,eAACN,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,UAAaV,EAAKW,OAClB,cAACC,EAAA,EAAD,CAAQN,QAAQ,UAAUO,QAAS,kBAAMZ,EAAmBD,EAAKc,MAAjE,qBAIF,eAACZ,EAAA,EAAKa,OAAN,0BAA0Bf,EAAKgB,a,mBC0BtBC,MAlCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,KAiBb,OAdAC,qBAAU,WACRD,EAASE,KACR,IAaD,cAACC,EAAA,EAAD,CAAWC,UAAU,MAArB,SACE,cAACC,EAAA,EAAD,UACGN,EAAMO,KAAI,SAAC1B,GACV,OACE,cAAC2B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,CACE5B,KAAMA,EACNC,mBAAoB,SAAC4B,GAAD,OAlBlC,SAA4BA,GAC1BV,EAAQA,EAAMO,KAAI,SAAC1B,GAIjB,OAHIA,EAAKc,MAAQe,IACf7B,EAAKgB,MAAQhB,EAAKgB,MAAQ,GAErBhB,KAEToB,EAASD,GAWmClB,CAAmB4B,gBCpBpDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.80c05a0b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nfunction VotingCard(props) {\r\n  let { team, incrementVoteCount } = props;\r\n\r\n  return (\r\n    <Card style={{ width: \"18rem\" }}>\r\n      <Card.Img variant=\"top\" src={`/assets/images/${team.logo}`} />\r\n      <Card.Body>\r\n        <Card.Title>{team.name}</Card.Title>\r\n        <Button variant=\"success\" onClick={() => incrementVoteCount(team._id)}>\r\n          Vote\r\n        </Button>\r\n      </Card.Body>\r\n      <Card.Footer>Vote count: {team.votes}</Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\nexport default VotingCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport VotingCard from \"./components/VotingCard.js\";\r\nimport teamsJson from \"./lib/teams.json\";\r\nimport \"./assets/scss/styles.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction App() {\r\n  let [teams, setTeams] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTeams(teamsJson);\r\n  }, []);\r\n\r\n  function incrementVoteCount(teamId) {\r\n    teams = teams.map((team) => {\r\n      if (team._id === teamId) {\r\n        team.votes = team.votes + 1;\r\n      }\r\n      return team;\r\n    });\r\n    setTeams(teams);\r\n  }\r\n\r\n  return (\r\n    <Container className=\"app\">\r\n      <Row>\r\n        {teams.map((team) => {\r\n          return (\r\n            <Col md={4}>\r\n              <VotingCard\r\n                team={team}\r\n                incrementVoteCount={(teamId) => incrementVoteCount(teamId)}\r\n              />\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}